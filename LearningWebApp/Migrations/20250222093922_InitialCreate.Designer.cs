// <auto-generated />
using LearningWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LearningWebApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250222093922_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LearningWebApp.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainerId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "دورة شاملة لتعلم تطوير تطبيقات الويب الحديثة.",
                            Hours = 40,
                            Price = 1500m,
                            Title = "تطوير تطبيقات الويب باستخدام ASP.NET Core",
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "دورة عملية لتعلم أساسيات ومتقدمة تصميم الجرافيك.",
                            Hours = 30,
                            Price = 1200m,
                            Title = "تصميم الجرافيك باستخدام Adobe Photoshop",
                            TrainerId = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "دورة للمبتدئين لتعلم أساسيات البرمجة.",
                            Hours = 20,
                            Price = 800m,
                            Title = "مقدمة في البرمجة باستخدام لغة C#",
                            TrainerId = 1
                        });
                });

            modelBuilder.Entity("LearningWebApp.Models.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Trainers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Info = "مدرب متخصص في تطوير الويب.",
                            Name = "أحمد محمد"
                        },
                        new
                        {
                            Id = 2,
                            Info = "مدربة معتمدة في تصميم الجرافيك.",
                            Name = "فاطمة علي"
                        });
                });

            modelBuilder.Entity("LearningWebApp.Models.Course", b =>
                {
                    b.HasOne("LearningWebApp.Models.Trainer", "Trainer")
                        .WithMany("Courses")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("LearningWebApp.Models.Trainer", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
